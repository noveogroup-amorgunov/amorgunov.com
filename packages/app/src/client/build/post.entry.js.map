{"version":3,"file":"post.entry.js?v=b64ef7f3e2cffa5d98e4","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAtCA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;AAwCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AChEA;AAoBA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAEA;AAKA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AC1FA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AAAA;AAFA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxIA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACZA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/BA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AElDA;AACA;AACA;AACA;AACA","sources":["webpack://@amorgunov/app/./src/client/javascript/modules/bot/WebConnector.ts","webpack://@amorgunov/app/./src/client/javascript/modules/bot/createBot.ts","webpack://@amorgunov/app/./src/client/javascript/modules/bot/terminal.ts","webpack://@amorgunov/app/./src/client/javascript/modules/copy.ts","webpack://@amorgunov/app/./src/client/javascript/modules/lazyload.ts","webpack://@amorgunov/app/./src/client/javascript/modules/menu.ts","webpack://@amorgunov/app/./src/client/javascript/modules/postReactions.ts","webpack://@amorgunov/app/./src/client/javascript/modules/prepareExternalLinks.ts","webpack://@amorgunov/app/./src/client/javascript/modules/scroll.ts","webpack://@amorgunov/app/./src/client/javascript/modules/share.ts","webpack://@amorgunov/app/./src/client/javascript/modules/theme.ts","webpack://@amorgunov/app/./src/client/javascript/post.entry.ts","webpack://@amorgunov/app/./src/client/stylesheets/post.entry.css?12f7","webpack://@amorgunov/app/webpack/bootstrap","webpack://@amorgunov/app/webpack/runtime/chunk loaded","webpack://@amorgunov/app/webpack/runtime/compat get default export","webpack://@amorgunov/app/webpack/runtime/define property getters","webpack://@amorgunov/app/webpack/runtime/hasOwnProperty shorthand","webpack://@amorgunov/app/webpack/runtime/make namespace object","webpack://@amorgunov/app/webpack/runtime/jsonp chunk loading","webpack://@amorgunov/app/webpack/before-startup","webpack://@amorgunov/app/webpack/startup","webpack://@amorgunov/app/webpack/after-startup"],"sourcesContent":["import type { IConnector } from '@typebot/core/lib/connectors/IConnector'\nimport type { IMessage } from '@typebot/core/lib/core/IMessage'\nimport { Message } from '@typebot/core/lib/core/Message'\nimport * as EE from 'event-emitter'\n\nexport interface IWebConnector extends IConnector {\n  send: (message: IMessage) => Promise<void>\n  receiveMessage: (text: string) => void\n}\n\n// @ts-expect-error FIXME fix type error\nexport class WebConnector implements IConnector {\n  static _getUser() {\n    return { id: 'user', name: 'Console User' }\n  }\n\n  getConnectorName() {\n    return 'console'\n  }\n\n  getUniqueSessionKey() {\n    return this.getConnectorName()\n  }\n\n  getUser() {\n    return Promise.resolve(WebConnector._getUser())\n  }\n\n  send(message: IMessage) {\n    // eslint-disable-next-line no-console\n    console.log(message.getText())\n\n    return Promise.resolve()\n  }\n\n  receiveMessage(text: string) {\n    if (!text) {\n      return\n    }\n\n    // @ts-expect-error FIXME fix type error\n    this.emit(\n      'receiveMessage',\n      new Message({\n        rawData: { text },\n        user: WebConnector._getUser(),\n        sessionKey: 'web-console',\n        // @ts-expect-error FIXME fix type error\n        sender: 'user',\n      }),\n    )\n  }\n}\n\n// @ts-expect-error FIXME fix type error\nEE(WebConnector.prototype)\n","import type { IBot, IBotContext } from '@typebot/core'\nimport type { IWebConnector } from './WebConnector'\nimport Bot from '@typebot/core/lib/core/Bot'\nimport { Terminal } from './terminal'\nimport { WebConnector } from './WebConnector'\n\nfunction addHandlers(type: string, bot: IBot) {\n  switch (type) {\n    case 'echobot':\n      bot.use(({ session, message }: IBotContext) => {\n        session.send(`You said: ${message.getText()}`)\n      })\n      break\n    case 'todo':\n      bot.initialState = { todos: [] }\n\n      bot.use('/list', ({ session }: IBotContext) => {\n        const { todos } = session.state\n        const msg = todos.length > 0 ? todos.join('\\n') : 'No todos!'\n\n        session.send(msg)\n      })\n      bot.use('/clear', ({ session }: IBotContext) => {\n        session.resetState()\n        session.send('Successfully clear all todos!')\n      })\n      bot.use(/\\/add (.+)/, ({ session, params }: IBotContext) => {\n        const [newTodo] = params as string[]\n        const todos = session.state.todos || []\n\n        session.setState({ todos: [...todos, newTodo] })\n        session.send(`Todo: ${newTodo} added!`)\n      })\n      bot.use(({ session }: IBotContext) => {\n        session.send('Unknown command. Type /list, /clear or /add {todo}.')\n      })\n      break\n    default:\n      return false\n  }\n  return false\n}\n\nfunction createBot(el: HTMLDivElement) {\n  const terminal = new Terminal(el, { text: 'Say anything to bot' })\n  const connector = new WebConnector() as unknown as IWebConnector\n  const bot = new Bot({ connector })\n\n  connector.send = (message) => {\n    terminal.addLine(`<span class=\"bot\">Bot says</span>: ${message.getText()}`)\n    return Promise.resolve()\n  }\n\n  terminal.readLine = connector.receiveMessage.bind(connector) as () => boolean\n\n  return bot\n}\n\nfunction registerTerminals($nodes: NodeListOf<HTMLDivElement>) {\n  $nodes.forEach((el) => {\n    if (el.dataset.bot) {\n      addHandlers(el.dataset.bot, createBot(el))\n    }\n  })\n}\n\nexport { addHandlers, createBot, registerTerminals }\n","const template = `\n    <div class=\"term\">\n        <div class=\"term-bar\">\n            <div class=\"term-winctrl\">\n                <span class=\"term-btn close\"></span>\n                <span class=\"term-btn minimise\"></span>\n                <span class=\"term-btn maximise\"></span>\n            </div>\n        </div>\n        <div class=\"term-cont\">\n            <div class=\"term-lines\">\n                {lines}\n            </div>\n            <div class=\"term-line\">\n              ~$ <span contentEditable=\"true\" class=\"term-cmd current\">{text}</span>\n            </div>\n        </div>\n    </div>\n`\n\nexport class Terminal {\n  el: HTMLDivElement\n\n  lines: string[]\n\n  text: string\n\n  $cont: HTMLDivElement | null = null\n\n  $lines: HTMLDivElement | null = null\n\n  $cmd: HTMLDivElement | null = null\n\n  constructor(el: HTMLDivElement, { text = '' } = {}) {\n    this.el = el\n    this.lines = []\n    this.text = text\n\n    this.render()\n\n    this.el.addEventListener('click', () => this.$cmd && this.$cmd.focus())\n\n    setTimeout(() => {\n      this.$cont = this.el.querySelector('.term-cont')\n      this.$lines = this.el.querySelector('.term-lines')\n      this.$cmd = this.el.querySelector('.term-cmd.current')\n\n      if (this.$cmd) {\n        this.$cmd.addEventListener('keydown', this.onKeyDown.bind(this))\n      }\n    })\n  }\n\n  onKeyDown(e: KeyboardEvent) {\n    const line = (e.target as HTMLDivElement).innerHTML\n\n    if (e.keyCode === 13) {\n      e.preventDefault()\n\n      this.addLine(line)\n\n      // @ts-expect-error FIXME fix type error\n      this.readLine(line)\n    }\n  }\n\n  addLine(line: string) {\n    this.lines.push(line)\n\n    if (!this.$lines || !this.$cont || !this.$cmd) {\n      return\n    }\n\n    this.$lines.innerHTML = this.lines\n      .map(text => `<div class=\"term-line\"><span class=\"term-cmd\">~$&nbsp;${text}</span></div>`)\n      .join('')\n\n    this.$cmd.innerHTML = ''\n    this.$cont.scrollTop = this.$cont.scrollHeight\n  }\n\n  readLine() {\n    return false\n  }\n\n  render() {\n    if (!this.el) {\n      return\n    }\n    this.el.innerHTML = template.replace('{text}', this.text).replace('{lines}', '')\n  }\n}\n","import * as ClipboardJS from 'clipboard'\n\nexport function initCopyToClipboard() {\n  document.querySelectorAll('.copy-btn').forEach((el) => {\n    const clipboard = new ClipboardJS(el)\n\n    clipboard.on('success', (e) => {\n      if (!e.trigger.innerHTML.endsWith(' 🤟')) {\n        const defaultText = e.trigger.innerHTML\n\n        e.trigger.innerHTML += ' 🤟'\n\n        setTimeout(() => {\n          e.trigger.innerHTML = defaultText\n        }, 2000)\n      }\n    })\n  })\n}\n","declare global {\n  interface Window {\n    lazyload: () => void\n  }\n}\n\nfunction throttle(func: () => void, timeout: number) {\n  let inThrottle = false\n\n  return function (...args: unknown[]) {\n    if (!inThrottle) {\n      inThrottle = true\n      func.apply(this, args)\n      setTimeout(() => {\n        inThrottle = false\n      }, timeout)\n    }\n  }\n}\n\nfunction lazyload() {\n  const windowHeight = window.innerHeight\n  const images: NodeListOf<HTMLImageElement> = document.querySelectorAll('.lazyload')\n  const offset = 120\n\n  images.forEach((image) => {\n    const boundingRect = image.getBoundingClientRect()\n    const yPosition = boundingRect.top - windowHeight\n    const yPositionBottom = boundingRect.bottom\n\n    if (yPosition <= offset && yPositionBottom >= -offset) {\n      // Заменяем содержимое src из data-src\n      if (image.getAttribute('data-src')) {\n        image.src = image.getAttribute('data-src')\n      }\n\n      // replace the srcset with the data-srcset\n      if (image.getAttribute('data-srcset')) {\n        image.srcset = image.getAttribute('data-srcset')\n      }\n\n      // replace the source srcset's with the data-srcset's\n      if (image.parentElement.tagName === 'PICTURE') {\n        const sources = image.parentElement.querySelectorAll('source')\n\n        sources.forEach((source) => {\n          source.srcset = source.getAttribute('data-srcset')\n        })\n      }\n\n      // Ожимаем пока новое изображение не загрузится\n      image.addEventListener('load', function () {\n        // Удаляем lazyload класс\n        this.classList.remove('lazyload')\n      })\n    }\n  })\n}\n\nconst throttledLazyLoad = throttle(lazyload, 200)\n\ndocument.addEventListener('scroll', throttledLazyLoad)\nwindow.addEventListener('resize', throttledLazyLoad)\nwindow.addEventListener('orientationChange', throttledLazyLoad)\n\nwindow.lazyload = lazyload\nlazyload()\n\nexport { lazyload }\n","export function registerMenuHandlers() {\n  const $toggler = document.querySelector('.header__menu-toggler') as HTMLDivElement\n  const $togglerCross = document.querySelector('.menu__toggler') as HTMLDivElement\n  const $menu = document.querySelector('.menu') as HTMLDivElement\n  const $menuOverlay = document.querySelector('.menu__overlay') as HTMLDivElement\n\n  function openMenu(event: MouseEvent) {\n    event.preventDefault()\n    $menu.classList.add('menu_opened')\n  }\n\n  function closeMenu(event: MouseEvent) {\n    event.preventDefault()\n    $menu.classList.remove('menu_opened')\n  }\n\n  $toggler.addEventListener('click', openMenu)\n  $menuOverlay.addEventListener('click', closeMenu)\n  $togglerCross.addEventListener('click', closeMenu)\n\n  document.addEventListener('keydown', (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      $menu.classList.remove('menu_opened')\n    }\n  })\n}\n","type ReactionCode = 'shocked' | 'love' | 'like' | 'rage' | 'dislike' | 'party' | 'partyPopper'\ntype Reactions = Record<ReactionCode, number>\n\nconst EMOJI_MAP: Record<ReactionCode, string> = {\n  shocked: '🤯',\n  love: '😍',\n  like: '👍',\n  dislike: '🥱',\n  rage: '😡',\n  party: '🥳',\n  partyPopper: '🥳',\n}\n\nconst IMAGES_MAP: Record<ReactionCode, string> = {\n  shocked: '/assets/reactions/shocked.svg',\n  love: '/assets/reactions/love.svg',\n  like: '/assets/reactions/like.svg',\n  dislike: '/assets/reactions/dislike.svg',\n  rage: '/assets/reactions/rage.svg',\n  party: '/assets/reactions/party.svg',\n  partyPopper: '/assets/reactions/partyPopper.svg',\n}\n\nconst REACTION_ENDPOINT\n  = 'https://i7on6ck7ng.execute-api.us-east-2.amazonaws.com/dev/posts/{slug}/likes'\n\nfunction getSlug() {\n  const [, slug] = document.location.pathname.match(/^\\/posts\\/([a-z0-9-_]+)/) || []\n  return slug\n}\n\nfunction getInitialReactions() {\n  return {\n    shocked: 0,\n    love: 0,\n    like: 0,\n    dislike: 0,\n    rage: 0,\n    party: 0,\n    partyPopper: 0,\n  }\n}\n\nfunction renderItems(reactions: Reactions, wrapperEl: HTMLDivElement) {\n  if (typeof reactions !== 'object') {\n    return\n  }\n\n  const content = Object.entries(reactions).map(([type, count]) => {\n    const typedType = type as ReactionCode\n    return `\n    <div class=\"reactions__item reaction\" data-type=\"${type}\">\n      <img class=\"reaction__image\" src=\"${IMAGES_MAP[typedType]}\" alt=\"${EMOJI_MAP[typedType]}\" width=\"64\" height=\"64\" />\n      <div class=\"reaction__counter\">${count}</div>\n    </div>\n    `\n  })\n\n  wrapperEl.innerHTML = content.join('\\n')\n}\n\nfunction getReaction(slug: string) {\n  return fetch(REACTION_ENDPOINT.replace('{slug}', slug))\n    .then(response => response.json())\n    .catch(err => console.error(err))\n}\n\nfunction clientOptimisticUpdate(\n  wrapperEl: HTMLDivElement,\n  selector: string,\n  increaseValue: boolean,\n) {\n  const el = wrapperEl.querySelector(selector) as HTMLDivElement | undefined\n\n  if (!el) {\n    return\n  }\n\n  const imageEl = el.querySelector('.reaction__image') as HTMLImageElement\n  const counterEl = el.querySelector('.reaction__counter') as HTMLDivElement\n\n  if (increaseValue) {\n    el.classList.add('reaction_active')\n    imageEl.src = imageEl.src.replace('.svg', '.gif')\n    counterEl.textContent = String(Number(counterEl.textContent) + 1)\n  }\n  else {\n    el.classList.remove('reaction_active')\n    imageEl.src = imageEl.src.replace('.gif', '.svg')\n    counterEl.textContent = String(Number(counterEl.textContent) - 1)\n  }\n}\n\nfunction setReaction(type: ReactionCode, wrapperEl: HTMLDivElement) {\n  const params = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: `{\"reactionId\":\"${type}\"}`,\n  }\n\n  clientOptimisticUpdate(wrapperEl, '.reaction_active', false)\n  clientOptimisticUpdate(wrapperEl, `.reaction[data-type=${type}]`, true)\n\n  return fetch(REACTION_ENDPOINT.replace('{slug}', getSlug()), params)\n    .then(response => response.json())\n    .catch(err => console.error(err))\n}\n\nexport function registerPostReactions() {\n  const wrapperEl: HTMLDivElement | null = document.querySelector('.reactions')\n\n  if (!wrapperEl) {\n    return\n  }\n\n  renderItems(getInitialReactions(), wrapperEl)\n\n  getReaction(getSlug()).then((reactions) => {\n    renderItems(reactions, wrapperEl)\n\n    wrapperEl.addEventListener('click', (event: MouseEvent) => {\n      const target = event.target as HTMLDivElement\n\n      if (!target) {\n        return\n      }\n\n      const el: HTMLDivElement = target.closest('.reaction') || target\n\n      if (!el.dataset.type) {\n        return\n      }\n\n      setReaction(el.dataset.type as ReactionCode, wrapperEl)\n    })\n  })\n}\n","function isExternalLink(url = '') {\n  const { host } = document.location\n  return url.startsWith('http') && !url.includes(host)\n}\n\nexport function prepareExternalLinks() {\n  document.querySelectorAll('.post a').forEach((a) => {\n    if (isExternalLink(a.getAttribute('href'))) {\n      a.setAttribute('rel', 'noreferrer external')\n      a.setAttribute('target', '_blank')\n    }\n  })\n}\n","export function scroll() {\n  const upContainer = document.querySelector('.post-layer__up')\n  let lastScrolledY = 0\n\n  if (!upContainer) {\n    return\n  }\n\n  upContainer.addEventListener('click', () => {\n    const scrolled = window.scrollY > 100\n\n    if (lastScrolledY && !scrolled) {\n      window.scrollTo(0, lastScrolledY)\n      lastScrolledY = 0\n    }\n    else {\n      lastScrolledY = window.scrollY\n      window.scrollTo(0, 0)\n    }\n  })\n\n  window.addEventListener('scroll', () => {\n    const scrolled = window.scrollY > 100\n\n    if (scrolled) {\n      upContainer.classList.add('post-layer__up_scrolled')\n      upContainer.classList.remove('post-layer__has_down_scroll')\n    }\n    else {\n      upContainer.classList.remove('post-layer__up_scrolled')\n\n      if (lastScrolledY) {\n        upContainer.classList.add('post-layer__has_down_scroll')\n      }\n    }\n  })\n}\n","export function isWebShareSupported() {\n  if (!('share' in window.navigator)) {\n    return false\n  }\n\n  if ('canShare' in navigator) {\n    const url = `https://${window.location.hostname}`\n    return (window.navigator as any).canShare({ url })\n  }\n\n  return true\n}\n\nexport function registerShare() {\n  const button = document.querySelector('[data-id=share-button') as HTMLButtonElement\n\n  if (!button || !isWebShareSupported()) {\n    return\n  }\n\n  const shareData = {\n    text: document.title,\n    url: window.location.href,\n  }\n\n  button.addEventListener('click', (event: MouseEvent) => {\n    try {\n      event.preventDefault()\n      navigator.share(shareData)\n    }\n    catch (err) {\n      console.error(err)\n    }\n  })\n}\n","type Nullable<T> = T | null\n\ntype Theme = 'dark' | 'light'\n\nfunction getPreferedTheme(): Theme {\n  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n}\n\nfunction loadThemeFromStorage(): Nullable<Theme> {\n  return localStorage.getItem('theme') as Nullable<Theme>\n}\n\nfunction saveThemeToStorage(theme: Theme) {\n  return localStorage.setItem('theme', theme)\n}\n\nfunction setTheme(theme: Theme) {\n  saveThemeToStorage(theme)\n  document.documentElement.setAttribute('data-theme', theme)\n}\n\nexport function syncTheme() {\n  const currentTheme = loadThemeFromStorage() || getPreferedTheme()\n  setTheme(currentTheme)\n}\n\nexport function registerThemeToggler() {\n  const $toggler = document.querySelector('.header__theme-toggler') as Nullable<HTMLDivElement>\n\n  if (!$toggler) {\n    return\n  }\n\n  function onTogglerClick(event: MouseEvent) {\n    event.preventDefault()\n\n    const theme = document.documentElement.getAttribute('data-theme') as Theme\n    setTheme(theme === 'light' ? 'dark' : 'light')\n  }\n\n  $toggler.addEventListener('click', onTogglerClick)\n}\n","import registerImageZoom from 'medium-zoom'\nimport { registerTerminals } from './modules/bot/createBot'\nimport { initCopyToClipboard as registerCopyToClipboard } from './modules/copy'\nimport { lazyload as registerImageLazyload } from './modules/lazyload'\nimport { registerMenuHandlers } from './modules/menu'\nimport { registerPostReactions } from './modules/postReactions'\nimport { prepareExternalLinks as registerExternalLinks } from './modules/prepareExternalLinks'\nimport { scroll as registerScrollTop } from './modules/scroll'\nimport { registerShare } from './modules/share'\nimport { registerThemeToggler, syncTheme } from './modules/theme'\n\nimport '../stylesheets/post.entry.css'\n\nsyncTheme()\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.body.classList.add('loaded')\n\n  const $postImages = document.querySelectorAll('.post__content img')\n  const $terminals: NodeListOf<HTMLDivElement> = document.querySelectorAll('.terminal')\n\n  registerMenuHandlers()\n  registerCopyToClipboard()\n  registerImageLazyload()\n  registerImageZoom($postImages, { background: '#2f2f2ed6' })\n  registerPostReactions()\n  registerExternalLinks()\n  registerScrollTop()\n  registerTerminals($terminals)\n  registerShare()\n  registerThemeToggler()\n})\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"post\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_amorgunov_app\"] = self[\"webpackChunk_amorgunov_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_pnpm_clipboard_2_0_4_node_modules_clipboard_dist_clipboard_js\",\"vendors-node_modules_pnpm_typebot_core_0_0_2_node_modules_typebot_core_lib_core_Bot_js-node_m-784253\"], function() { return __webpack_require__(\"./src/client/javascript/post.entry.ts\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}